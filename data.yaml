AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation template that contains a Lambda function behind an API Gateway that has two stages mapped to two Lambda alias'
Resources:
    GreetingLambda:
        Type: 'AWS::Lambda::Function'
        Properties:
            Code: {S3Bucket: aadhri-test-buck, S3Key: test.zip}
            Description: 'A greeting function'
            FunctionName: GreetingLambda
            Handler: index.GreetingLambda
            Runtime: nodejs4.3
    GreetingLambdaDevAlias:
        Type: 'AWS::Lambda::Alias'
        Properties:
            FunctionName: {Ref: GreetingLambda}
            FunctionVersion: $LATEST
            Name: DEV
    GreetingLambdaStageAlias:
        Type: 'AWS::Lambda::Alias'
        Properties:
            FunctionName: {Ref: GreetingLambda}
            FunctionVersion: $LATEST
            Name: STAGE
    GreetingLambdaProdAlias:
        Type: 'AWS::Lambda::Alias'
        Properties:
            FunctionName: {Ref: GreetingLambda}
            FunctionVersion: $LATEST
            Name: PROD
    
    GreetingApi:
        Type: 'AWS::ApiGateway::RestApi'
        Properties:
            Name: 'Greeting API'
            Description: 'API used for Greeting requests'
            FailOnWarnings: true
      
    
    GreetingApiDevStage:
        Type: 'AWS::ApiGateway::Stage'
        Properties:
            DeploymentId: {Ref: ApiDeployment}
            MethodSettings: [{DataTraceEnabled: true, HttpMethod: '*', LoggingLevel: INFO, ResourcePath: '/*'}]
            RestApiId: {Ref: GreetingApi}
            StageName: dev
            Variables: {LambdaAlias: DEV}
    GreetingApiStageStage:
        Type: 'AWS::ApiGateway::Stage'
        Properties:
            DeploymentId: {Ref: ApiDeployment}
            MethodSettings: [{DataTraceEnabled: true, HttpMethod: '*', LoggingLevel: INFO, ResourcePath: '/*'}]
            RestApiId: {Ref: GreetingApi}
            StageName: stage
            Variables: {LambdaAlias: STAGE}
    GreetingApiProdStage:
        Type: 'AWS::ApiGateway::Stage'
        Properties:
            DeploymentId: {Ref: ApiDeployment}
            MethodSettings: [{DataTraceEnabled: true, HttpMethod: '*', LoggingLevel: INFO, ResourcePath: '/*'}]
            RestApiId: {Ref: GreetingApi}
            StageName: prod
            Variables: {LambdaAlias: PROD}
    ApiDeployment:
        Type: 'AWS::ApiGateway::Deployment'
        Properties:
            RestApiId: {Ref: GreetingApi}
            StageName: DummyStage
    GreetingResource:
        Type: 'AWS::ApiGateway::Resource'
        Properties:
            RestApiId: {Ref: GreetingApi}
            ParentId: {'Fn::GetAtt': [GreetingApi, RootResourceId]}
            PathPart: greeting
    
Outputs:
    RootUrl:
        Description: 'Root URL of the API gateway'
        Value:
            'Fn::Join': ["", ['https://', {Ref: GreetingApi}, .execute-api., {Ref: 'AWS::Region'}, .amazonaws.com]]
